name: "Storybook Deploy"

on:
  push:
    branches:
      - 'release/**'
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: cache
        id: npm-cache 
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo 'npm cache hit'

      - name: Install dependencies
        run: npm ci

      - name: build-storybook
        run: npm run build-storybook

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: deploy-storybook
        run: npm run deploy-storybook

      - name: build packages
        run: npm run build

      - name: commit and push
        run: |
          git config --global user.email ""
          git config --global user.name "github-actions[bot]"
          git add .
          if git diff-index --name-only HEAD --; then
            git commit -m "build all packages"
            git push
          else
            echo "No changes to the output on this push;"
          fi
      - name: comment on PR
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            try {
              const event = require(process.env.GITHUB_EVENT_PATH);
              const releaseBranch = event.ref;

              const bodyString = `Storybook Deployed: https://design-system.webtoon.today/${releaseBranch}`;

              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: bodyString
              });
            } catch(error) {
              console.error(error);
            }